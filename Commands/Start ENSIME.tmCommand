<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

support = ENV['TM_SUPPORT_PATH'] + '/lib/'

require "open3"
require support + 'tm/process'
require support + 'tm/htmloutput'
require ENV['TM_BUNDLE_SUPPORT'] + '/ensime.rb'

if ENV['ENSIME_HOME'].nil?
	puts "&lt;h2&gt;Please set the ENSIME_HOME shell variable.&lt;/h2&gt;"
elsif ENV['TM_PROJECT_DIRECTORY'].nil?
    puts "&lt;h2&gt;Please set the TM_PROJECT_DIRECTORY shell variable.&lt;/h2&gt;"
else
	ENSIME_HOME = ENV['ENSIME_HOME']
	ENSIME_SH = "cd '#{ENSIME_HOME}' &amp;&amp; ./bin/server"
	TEMP_FILE = ENV['TM_PROJECT_DIRECTORY'] + "/ensime_port"

     Ensime::LittleHelper.new.register_images_for_completion

	TextMate::HTMLOutput.show(
	  :title =&gt; "Textmate ENSIME Server", 
	  :sub_title =&gt; "Logs") do |io|
	  puts "&lt;p&gt;Started the server using: #{ENSIME_SH} '#{TEMP_FILE}'&lt;hr /&gt;&lt;/p&gt;"
	  stdin, stdout, stderr = Open3.popen3("#{ENSIME_SH} '#{TEMP_FILE}'")
	  line = ""
	  while(line = stdout.gets)
	    io &lt;&lt; "&lt;p&gt;#{line}&lt;/p&gt;"
	  end
	end
end</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>^R</string>
	<key>name</key>
	<string>Start ENSIME</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.scala</string>
	<key>uuid</key>
	<string>6D0CEBCE-33B6-494A-9D31-DD7C219D9F26</string>
</dict>
</plist>
